/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *A, ListNode *B) {
        ListNode *th1=A , *th2=B;
        stack<ListNode*>s1,s2;
        while(th1 != NULL)
        {
            s1.push(th1);
            th1 = th1->next;
        }
        while(th2 != NULL)
        {
            s2.push(th2);
            th2 = th2->next;
        }
        if(s1.top() != s2.top())
        return NULL;
        ListNode* temp;
        while(!s1.empty() && !s2.empty())
        {
            if(s1.top() != s2.top())
            break;
            else
            {
                temp = s1.top();
                s1.pop();
                s2.pop();
            }
        }
        return temp;
    }
};
